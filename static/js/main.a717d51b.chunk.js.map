{"version":3,"sources":["ethereum/web3.js","components/Nav/index.jsx","assets/Ticket.jpg","components/Hero/index.jsx","assets/VerifyImg.png","ethereum/collection.js","components/Verify/index.jsx","components/Transfer/index.jsx","components/Footer/index.jsx","App.js","index.js"],"names":["web3","window","Web3","currentProvider","provider","providers","HttpProvider","Nav","address","setAddress","addToast","useToasts","Connect","e","a","preventDefault","eth","requestAccounts","accounts","message","appearance","autoDismiss","autoDismissTimeout","className","onClick","slice","length","icon","faPowerOff","Hero","rel","href","target","src","Ticket","alt","Contract","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","Verify","useState","UserArress","setUserArress","ShowTokens","setShowTokens","TokenAmount","setTokenAmount","onVerify","contract","methods","balanceOf","call","_TokenAmount","onChange","value","placeholder","VerifyImg","Transfer","RecipientAddress","setRecipientAddress","Quantity","setQuantity","Loading","setLoading","TransferNFT","parseInt","userAddress","alert","safeTransferFrom","send","from","color","height","width","Footer","faTwitter","faFacebook","faInstagram","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a717d51b.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // we are on the browser and metamask has injected web3 into the browser\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    const provider = new Web3.providers.HttpProvider(\n        'https://rinkeby.infura.io/v3/dc54edebc0c3401c8c310c24128add70',\n    );\n    web3 = new Web3(provider);\n}\n\nexport default web3;","import React, { Fragment } from \"react\";\n// import Logo from \"../../assets/Logo.png\";\nimport web3 from \"../../ethereum/web3\";\nimport { useToasts } from \"react-toast-notifications\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ address, setAddress }) => {\n  const { addToast } = useToasts();\n  const Connect = async (e) => {\n    try {\n      e.preventDefault();\n\n      const accounts = await web3.eth.requestAccounts();\n      if (address) {\n        setAddress(null);\n      } else {\n        setAddress(accounts[0]);\n      }\n    } catch (error) {\n      addToast(error.message, {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 5000,\n      });\n    }\n  };\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-logo-container\">\n        {/* <img src={Logo} alt=\"\" className=\"nav-logo-img\" />\n        <div className=\"nav-logo-text\">LOGO</div> */}\n      </div>\n      <div className=\"nav-connect-container\">\n        <button className=\"nav-connect-btn\" onClick={Connect}>\n          {address ? (\n            <Fragment>\n              <span className=\"navbar-address-text\">\n                {address &&\n                  address.slice(0, 4) +\n                    \"....\" +\n                    address.slice(address.length - 4, address.length)}\n              </span>\n              <FontAwesomeIcon icon={faPowerOff} />\n            </Fragment>\n          ) : (\n            <div>Connect Wallet</div>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/Ticket.ef74ab4b.jpg\";","import React from \"react\";\nimport Nav from \"../Nav\";\nimport \"./index.css\";\nimport Ticket from \"../../assets/Ticket.jpg\";\nconst Hero = ({ address, setAddress }) => {\n  return (\n    <div className=\"hero-background\">\n      <Nav address={address} setAddress={setAddress} />\n      <div className=\"hero-container\">\n        <div className=\"hero-content-container\">\n          <div className=\"hero-content-header-container\">\n            <div className=\"hero-content-header\">\n              <span className=\"hero-content-header-text1\">Fighting ticket</span>\n              <span className=\"hero-content-header-text2\">fraud with the</span>\n              <span className=\"hero-content-header-text3\">\n                security of the BlockChain\n              </span>\n            </div>\n          </div>\n          <div className=\"hero-content-desc\">\n            If you have ever used the phrase \"admin can you verify this ticket?\"\n            then you understand the risk associated with buying second hand\n            tickets for your favorite live events. With 3-Thentic's NFT ticket\n            verification service you can use the power of web 3.0 and BlockChain\n            technology to be sure you are buying 100% verified tickets every\n            time. You do need to create a crypto wallet i order to use our\n            verification service but it is easy to do and doesn't cost anything.\n            We recommend using MetaMask.\n            <br />\n            <br />\n            <span className=\"hero-faq-link\">\n              If you have questions please visit our\n              <a\n                rel=\"noreferrer\"\n                href=\"https://festywesty.com/3-thentic-faq/\"\n                target=\"_blank\"\n                className=\"hero-link\"\n              >\n                Faq Page\n              </a>\n            </span>\n          </div>\n        </div>\n        <div className=\"hero-img-container\">\n          <img src={Ticket} className=\"hero-img\" alt=\"hero-img.png\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","export default __webpack_public_path__ + \"static/media/VerifyImg.4cc4c377.png\";","import web3 from \"./web3\";\n\nconst address = \"0x35AF23df2c3f6d0364F06BE7aAD39237A4580Ab5\";\n\nconst abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_mintAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_state\",\n        type: \"bool\",\n      },\n    ],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_newBaseURI\",\n        type: \"string\",\n      },\n    ],\n    name: \"setBaseURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_initBaseURI\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"amountMinted\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"baseExtension\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"cost\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"FestivalId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getRemainingAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quantity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport VerifyImg from \"../../assets/VerifyImg.png\";\nimport contract from \"../../ethereum/collection\";\nimport { useToasts } from \"react-toast-notifications\";\nconst Verify = () => {\n  const [UserArress, setUserArress] = useState(\"\");\n  const [ShowTokens, setShowTokens] = useState(false);\n  const [TokenAmount, setTokenAmount] = useState(0);\n  const { addToast } = useToasts();\n\n  const onVerify = async () => {\n    if (UserArress === \"\") {\n      addToast(`User Address Cannot be empty`, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n      return;\n    }\n    let _TokenAmount = await contract.methods.balanceOf(UserArress, 0).call();\n    setShowTokens(true);\n    setTokenAmount(_TokenAmount);\n  };\n\n  return (\n    <div className=\"verify-container\">\n      <div className=\"verify-header\">Verify Owner</div>\n      <div className=\"verify-desc\">\n        Enter the ticket holders nft address they provide you in this box to\n        verify that they currently hold the NFT for the ticket you are planning\n        to purchase. If it comes back verified then you can be sure it is an\n        authentic ticket.\n      </div>\n      <div className=\"verify-input-container\">\n        <input\n          type=\"text\"\n          className=\"verify-input\"\n          onChange={(e) => {\n            setUserArress(e.target.value);\n            setShowTokens(false);\n          }}\n          placeholder=\"Enter Address\"\n        />\n        <button className=\"verify-btn\" onClick={onVerify}>\n          Verify\n        </button>\n      </div>\n      {ShowTokens && (\n        <div className=\"balance-of-user\">\n          This user has {TokenAmount} Ticket\n        </div>\n      )}\n      <img src={VerifyImg} className=\"VerifyImgBackground\" alt=\"verify.png\" />\n    </div>\n  );\n};\n\nexport default Verify;\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport contract from \"../../ethereum/collection\";\nimport web3 from \"../../ethereum/web3\";\nimport Loader from \"react-loader-spinner\";\nconst Transfer = ({ address, setAddress }) => {\n  const { addToast } = useToasts();\n  const [RecipientAddress, setRecipientAddress] = useState(\"\");\n  const [Quantity, setQuantity] = useState(\"\");\n  const [Loading, setLoading] = useState(false);\n\n  const TransferNFT = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      if (RecipientAddress === \"\") {\n        addToast(`Recipient Address Cannot be empty`, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      if (parseInt(Quantity) < 1) {\n        addToast(`Quantity must be greator than 0`, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      let userAddress = address;\n      if (!userAddress) {\n        const accounts = await web3.eth.requestAccounts();\n        userAddress = accounts[0];\n        setAddress(accounts[0]);\n      }\n      alert(userAddress);\n      alert(RecipientAddress);\n      alert(0);\n      alert(Quantity);\n      await contract.methods\n        .safeTransferFrom(\n          userAddress,\n          RecipientAddress,\n          0,\n          parseInt(Quantity),\n          \"0x6d6168616d000000000000000000000000000000000000000000000000000000\"\n        )\n        .send({\n          from: userAddress,\n        });\n      addToast(\"Token Successfully Transfered\", {\n        appearance: \"success\",\n        autoDismiss: false,\n      });\n    } catch (error) {\n      addToast(error.message, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    setLoading(false);\n  };\n  return (\n    <div className=\"transfer-container\">\n      <div className=\"trasnfer-header\">Transfer Your Token</div>\n      <div className=\"transfer-content-container\">\n        <div className=\"transfer-text\">\n        If you are the ticket owner then you will transfer the NFT with the ticket when you \n        sell them to the buyer.  Enter the wallet address of the purchaser and enter \n        the quantity as 1.\n        </div>\n        {Loading ? (\n          <div className={`Loader-Text ${!Loading && \"visible-div\"} `}>\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#ff8b3d\"\n              height={80}\n              width={80}\n            />\n            <span className=\"LoadingText\"> Awaiting Approval </span>\n          </div>\n        ) : (\n          <div className=\"transfer-input-container\">\n            <input\n              type=\"text\"\n              className=\"transfer-input\"\n              placeholder=\"Enter Recipient Address\"\n              onChange={(e) => setRecipientAddress(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              className=\"transfer-input\"\n              placeholder=\"Enter Quantity to Transfer\"\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button className=\"transfer-btn\" onClick={TransferNFT}>\n              Transfer\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Transfer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {\n  faFacebook,\n  faInstagram,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport \"./index.css\";\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-icon-item\">\n        <FontAwesomeIcon icon={faTwitter} />\n      </div>\n      <div className=\"footer-icon-item\">\n        <FontAwesomeIcon icon={faFacebook} />\n      </div>\n      <div className=\"footer-icon-item\">\n        <FontAwesomeIcon icon={faInstagram} />\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport { Fragment, useState } from \"react\";\nimport Hero from \"./components/Hero\";\nimport Verify from \"./components/Verify\";\nimport Transfer from \"./components/Transfer\";\nimport Footer from \"./components/Footer\";\nimport { ToastProvider } from \"react-toast-notifications\";\nconst App = () => {\n  const [address, setAddress] = useState(null);\n  return (\n    <Fragment>\n      <ToastProvider>\n        <Hero address={address} setAddress={setAddress} />\n        <Verify />\n        <Transfer address={address} setAddress={setAddress} />\n        <Footer />\n      </ToastProvider>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}